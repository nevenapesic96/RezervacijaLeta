/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controller.Controller;
import domen.PutnikEntity;
import domen.RezervacijaLetaEntity;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import tableModel.PutnikTableModel;

/**
 *
 * @author NEVEN
 */
public class FIzaberiPutnika extends javax.swing.JFrame {

    FNovaRezervacija glavna;
    /**
     * Creates new form FIzaberiPutnika
     */
    public FIzaberiPutnika() {
        initComponents();
        
        setLocationRelativeTo(null);
        popuniTabelu();
        prepareTableForSort();
        pripremiFormu(FormMode.PRETRAZI);
    }

    FIzaberiPutnika(FNovaRezervacija n) {
        initComponents();
        
        setLocationRelativeTo(null);
        glavna=n;
        popuniTabelu();
        prepareTableForSort();
        pripremiFormu(FormMode.IZABERI);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPutnici = new javax.swing.JTable();
        jbtnIzmeniPutnika = new javax.swing.JButton();
        jbtnDodaj = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnIzaberi = new javax.swing.JButton();
        jtxtPretraga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Svi putnici");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Izaberi putnika:"));

        jtblPutnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblPutnici);

        jbtnIzmeniPutnika.setText("Izmeni putnika");
        jbtnIzmeniPutnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniPutnikaActionPerformed(evt);
            }
        });

        jbtnDodaj.setText("Dodaj putnika");
        jbtnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi putnika");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnIzaberi.setText("Izaberi");
        jbtnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzaberiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnIzmeniPutnika)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnIzaberi)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnIzmeniPutnika)
                    .addComponent(jbtnDodaj)
                    .addComponent(jbtnObrisi)
                    .addComponent(jbtnIzaberi))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel1.setText("Filter:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzaberiActionPerformed
        int selektovaRed=jtblPutnici.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraPutnika=(Long) jtblPutnici.getValueAt(selektovaRed, 0);
            glavna.postaviSelektovanogPutnika(sifraPutnika);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati let");
        }
    }//GEN-LAST:event_jbtnIzaberiActionPerformed

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        int selektovaRed=jtblPutnici.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraPutnika=(Long) jtblPutnici.getValueAt(selektovaRed, 0);
            int odgovor=JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da izbrisete ovog putnika?", "Da li ste sigurni", JOptionPane.YES_NO_OPTION); 
            if(odgovor==0){
                try {
                    if(proveriRezervacije(sifraPutnika)){
                        JOptionPane.showMessageDialog(rootPane, "Postoje rezervacije za ovog putnika");
                        return;
                    }
                    if(Controller.obrisiPutnika(sifraPutnika)){
                        JOptionPane.showMessageDialog(rootPane, "Putnik je obrisan");
                        
                        try {
                                List<PutnikEntity> putnici=Controller.vratiSvePutnike();
                                TableModel tm=new PutnikTableModel(putnici);
                                jtblPutnici.setModel(tm);
                                prepareTableForSort();
        } catch (Exception ex) {
            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Putnik nije obrisan");
                    }       } catch (Exception ex) {
                    Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati putnika");
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajActionPerformed
        JDialog noviPutnik=new FNoviPutnik(glavna, true, this);
        noviPutnik.setVisible(true);
    }//GEN-LAST:event_jbtnDodajActionPerformed

    private void jbtnIzmeniPutnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniPutnikaActionPerformed
        int selektovaRed=jtblPutnici.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraPutnika=(Long) jtblPutnici.getValueAt(selektovaRed, 0);

            JDialog forma=new FNoviPutnik(glavna, true, this,sifraPutnika);
            forma.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati let");
        }
    }//GEN-LAST:event_jbtnIzmeniPutnikaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodaj;
    private javax.swing.JButton jbtnIzaberi;
    private javax.swing.JButton jbtnIzmeniPutnika;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JTable jtblPutnici;
    private javax.swing.JTextField jtxtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        try {
            List<PutnikEntity> putnici=Controller.vratiSvePutnike();
            TableModel tm=new PutnikTableModel(putnici);
            jtblPutnici.setModel(tm);
        } catch (Exception ex) {
            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void osveziTabelu(){
        try {
            List<PutnikEntity> putnici=Controller.vratiSvePutnike();
            TableModel tm=new PutnikTableModel(putnici);
            jtblPutnici.setModel(tm);
            prepareTableForSort();
        } catch (Exception ex) {
            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void prepareTableForSort() {
        
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(jtblPutnici.getModel());
        jtblPutnici.setRowSorter(rowSorter);

        jtxtPretraga.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String filterCity = jtxtPretraga.getText();

                if (filterCity.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterCity));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = jtxtPretraga.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    private void pripremiFormu(FormMode mode) {
        switch(mode){
            case IZABERI:
                jbtnIzaberi.setVisible(true);
                jbtnDodaj.setVisible(false);
                jbtnIzmeniPutnika.setVisible(false);
                jbtnObrisi.setVisible(false);
                break;
            case PRETRAZI:
                jbtnIzaberi.setVisible(false);
                jbtnDodaj.setVisible(true);
                jbtnIzmeniPutnika.setVisible(true);
                jbtnObrisi.setVisible(true);
                break;
        }
    }
    private boolean proveriRezervacije(Long sifraPutnika) throws Exception {
        List<RezervacijaLetaEntity> rezervacije=Controller.vratiSveRezervacije();
        for (RezervacijaLetaEntity rez : rezervacije) {
            if(rez.getPutnik().getSifraPutnika().equals(sifraPutnika))
                return true;
        }
        return false;
    }
}
