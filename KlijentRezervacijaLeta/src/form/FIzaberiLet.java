/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controller.Controller;
import domen.KorisnikEntity;
import domen.KorisnikEnum;
import domen.LetEntity;
import domen.RezervacijaLetaEntity;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import session.Session;
import tableModel.LetTableModel;

/**
 *
 * @author NEVEN
 */
public class FIzaberiLet extends javax.swing.JFrame {

    private FNovaRezervacija p;
    private KorisnikEntity k;
    /**
     * Creates new form FLet
     */
    public FIzaberiLet() {
        initComponents();
        
        setLocationRelativeTo(null);
        popuniTabelu();
        prepareTableForSort();
        srediPolja();
    }
    
    public FIzaberiLet(FNovaRezervacija p) {
        initComponents();
        
        setLocationRelativeTo(null);
        this.p=p;
        popuniTabelu();
        prepareTableForSort();
        srediPolja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblLetovi = new javax.swing.JTable();
        jbtnPrikazi = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnIzaberi = new javax.swing.JButton();
        jtxtPretraga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Izaberi let:"));

        jtblLetovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblLetovi);

        jbtnPrikazi.setText("Prikazi");
        jbtnPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrikaziActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnIzaberi.setText("Izaberi");
        jbtnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzaberiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnIzaberi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnPrikazi)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnPrikazi)
                    .addComponent(jbtnObrisi)
                    .addComponent(jbtnIzaberi))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel1.setText("Filter:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrikaziActionPerformed
        int selektovaRed=jtblLetovi.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraLeta=(Long) jtblLetovi.getValueAt(selektovaRed, 0);

            JFrame forma=new FNoviLet(sifraLeta,this);
            forma.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati let");
        }
    }//GEN-LAST:event_jbtnPrikaziActionPerformed

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        int selektovaRed=jtblLetovi.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraLeta=(Long) jtblLetovi.getValueAt(selektovaRed, 0);
            int odgovor=JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da izbrisete ovaj let?", "Da li ste sigurni", JOptionPane.YES_NO_OPTION); 
            if(odgovor==0){
                try {
                    
                    if(proveriRezervacije(sifraLeta)){
                        JOptionPane.showMessageDialog(rootPane, "Postoje rezervacije za ovaj let");
                        return;
                    }
                    if(Controller.obrisiLet(sifraLeta)){
                        JOptionPane.showMessageDialog(rootPane, "Let je obrisan");
                        try {
                        List<LetEntity> letovi=Controller.vratiSveLetove();
                        TableModel tm=new LetTableModel(letovi);
                        jtblLetovi.setModel(tm);
                        prepareTableForSort();
                        } catch (Exception ex) {
                            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Let nije obrisan");
                    }       } catch (Exception ex) {
                    Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati let");
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzaberiActionPerformed
        int selektovaRed=jtblLetovi.getSelectedRow();
        if (selektovaRed >= 0) {
            Long sifraLeta=(Long) jtblLetovi.getValueAt(selektovaRed, 0);
            p.postaviSelektovaniLet(sifraLeta);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati let");
        }
    }//GEN-LAST:event_jbtnIzaberiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnIzaberi;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnPrikazi;
    private javax.swing.JTable jtblLetovi;
    private javax.swing.JTextField jtxtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        try {
            List<LetEntity> letovi=Controller.vratiSveLetove();
            TableModel tm=new LetTableModel(letovi);
            jtblLetovi.setModel(tm);
        } catch (Exception ex) {
            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void prepareTableForSort() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(jtblLetovi.getModel());
        jtblLetovi.setRowSorter(rowSorter);

        jtxtPretraga.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String filterCity = jtxtPretraga.getText();

                if (filterCity.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterCity));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = jtxtPretraga.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    void osveziFormu() {
        try {
                        List<LetEntity> letovi=Controller.vratiSveLetove();
                        TableModel tm=new LetTableModel(letovi);
                        jtblLetovi.setModel(tm);
                        prepareTableForSort();
                        } catch (Exception ex) {
                            Logger.getLogger(FIzaberiLet.class.getName()).log(Level.SEVERE, null, ex);
                        }
    }

    private boolean proveriRezervacije(Long sifraLeta) throws Exception {
        List<RezervacijaLetaEntity> rezervacije=Controller.vratiSveRezervacije();
        for (RezervacijaLetaEntity rez : rezervacije) {
            if(rez.getLet().getSifraLeta().equals(sifraLeta))
                return true;
        }
        return false;
    }

    private void srediPolja() {
        k=(KorisnikEntity) Session.getInstance().getMap().get("korisnik");
        if(k.getKorisnik().equals(KorisnikEnum.radnik)){
            jbtnIzaberi.setVisible(true);
            jbtnObrisi.setVisible(false);
            jbtnPrikazi.setVisible(false);
        }else{
                jbtnIzaberi.setVisible(false);
                jbtnObrisi.setVisible(true);
                jbtnPrikazi.setVisible(true);
            }
    }
}
