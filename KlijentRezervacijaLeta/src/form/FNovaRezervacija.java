/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controller.Controller;
import domen.KorisnikEntity;
import domen.LetEntity;
import domen.PutnikEntity;
import domen.RezervacijaLetaEntity;
import domen.StavkaRezervacije;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import session.Session;
import tableModel.RezervacijaTableModel;

/**
 *
 * @author NEVEN
 */
public class FNovaRezervacija extends javax.swing.JFrame {

    private List<LetEntity> letovi;
    private List<PutnikEntity> putnici;
    KorisnikEntity k;
    RezervacijaLetaEntity rezervacija=null;
    FIzaberiRezervaciju glavna;
    /**
     * Creates new form FNovaRezervacija
     */
    public FNovaRezervacija() {
        initComponents();
        
        setLocationRelativeTo(null);
        popuniCombo();
        srediTabelu();
        k=(KorisnikEntity) Session.getInstance().getMap().get("korisnik");
        jbtnSacuvajSve.setVisible(true);
        jbtnSacuvajIzmene.setVisible(false);
    }

    FNovaRezervacija(RezervacijaLetaEntity rezervacija,FIzaberiRezervaciju glavna) {
        initComponents();
        
        setLocationRelativeTo(null);
        popuniCombo();
        srediTabelu();
        k=(KorisnikEntity) Session.getInstance().getMap().get("korisnik");
        this.rezervacija=rezervacija;
        this.glavna=glavna;
        popuniPolja();
        jbtnSacuvajSve.setVisible(false);
        jbtnSacuvajIzmene.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboLetovi = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jComboPutnik = new javax.swing.JComboBox();
        jbtnDodaj = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblRezervacije = new javax.swing.JTable();
        jbtnSacuvajSve = new javax.swing.JButton();
        jbtnPretraziLet = new javax.swing.JButton();
        jbtnPretraziPutnika = new javax.swing.JButton();
        jtxtPutnik = new javax.swing.JTextField();
        jtxtBrojPasosa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnSacuvajIzmene = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nova rezervacija");

        jLabel1.setText("Let:");

        jLabel2.setText("Putnik:");

        jbtnDodaj.setText("+");
        jbtnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("-");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jtblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblRezervacije);

        jbtnSacuvajSve.setText("Sacuvaj sve");
        jbtnSacuvajSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajSveActionPerformed(evt);
            }
        });

        jbtnPretraziLet.setText("Pretrazi");
        jbtnPretraziLet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPretraziLetActionPerformed(evt);
            }
        });

        jbtnPretraziPutnika.setText("Pretrazi");
        jbtnPretraziPutnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPretraziPutnikaActionPerformed(evt);
            }
        });

        jLabel3.setText("Ime putnika:");

        jLabel4.setText("Broj pasosa:");

        jbtnSacuvajIzmene.setText("Sacuvaj izmene");
        jbtnSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajIzmeneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jbtnSacuvajIzmene)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbtnSacuvajSve))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jtxtPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jtxtBrojPasosa, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboPutnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbtnPretraziPutnika))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jComboLetovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbtnPretraziLet)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboLetovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPretraziLet))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jbtnPretraziPutnika)
                    .addComponent(jComboPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtBrojPasosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnDodaj)
                        .addGap(10, 10, 10)
                        .addComponent(jbtnObrisi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSacuvajSve)
                    .addComponent(jbtnSacuvajIzmene))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPretraziLetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPretraziLetActionPerformed
        JFrame izaberiLet=new FIzaberiLet(this);
        izaberiLet.setVisible(true);
    }//GEN-LAST:event_jbtnPretraziLetActionPerformed

    private void jbtnPretraziPutnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPretraziPutnikaActionPerformed
        JFrame izaberiPutnika=new FIzaberiPutnika(this);
        izaberiPutnika.setVisible(true);
    }//GEN-LAST:event_jbtnPretraziPutnikaActionPerformed

    private void jbtnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajActionPerformed
        String putnik=jtxtPutnik.getText().trim();
        String brPasosa=jtxtBrojPasosa.getText().trim();
        if(putnik.equals("") || brPasosa.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nisu uneti svi podaci");
            return;
        }
        if(rezervacija==null){
            postaviRezervaciju();
        }
        RezervacijaTableModel tm=(RezervacijaTableModel) jtblRezervacije.getModel();
        tm.dodajStavku(new StavkaRezervacije(Long.MIN_VALUE, rezervacija,putnik,brPasosa));
        jtxtPutnik.setText("");
        jtxtBrojPasosa.setText("");
    }//GEN-LAST:event_jbtnDodajActionPerformed

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        int selektovaRed=jtblRezervacije.getSelectedRow();
        if (selektovaRed >= 0) {
                RezervacijaTableModel tm=(RezervacijaTableModel) jtblRezervacije.getModel();
                tm.izbaci(selektovaRed);
        } else {
            JOptionPane.showMessageDialog(null, "Morate selektovati rezervaciju");
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnSacuvajSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajSveActionPerformed
        RezervacijaTableModel tm=(RezervacijaTableModel) jtblRezervacije.getModel();
        if(rezervacija==null){
            JOptionPane.showMessageDialog(null, "Morate uneti bar jednu stavku");
            return;
        }
        rezervacija.setStavke(tm.vratiListu());
        if(rezervacija.getStavke().isEmpty()){
            JOptionPane.showMessageDialog(null, "Morate uneti bar jednu stavku");
            return;
        }
        try{
            
        rezervacija.setDatumRezervacije(LocalDate.now());
        rezervacija.setVremeRezervacije(LocalTime.now());
        
        if(Controller.zapamtiRezervaciju(rezervacija)){
           JOptionPane.showMessageDialog(rootPane, "Rezervacija je sacuvana");
           this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Vec postoji rezervacija za ovog putnika za ovaj let");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Dogodila se greska kod cuvanja rezervacije");
        }
    }//GEN-LAST:event_jbtnSacuvajSveActionPerformed

    private void jbtnSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajIzmeneActionPerformed
        RezervacijaTableModel tm=(RezervacijaTableModel) jtblRezervacije.getModel();
        rezervacija.setStavke(tm.vratiListu());
        if(rezervacija.getStavke().isEmpty()){
            JOptionPane.showMessageDialog(null, "Morate uneti bar jednu stavku");
            return;
        }
        System.out.println(rezervacija.getStavke().size());
        rezervacija.setLet((LetEntity) jComboLetovi.getSelectedItem());
        rezervacija.setPutnik((PutnikEntity) jComboPutnik.getSelectedItem());
        rezervacija.setUser(k.getUsername());
        try{
        if(Controller.zapamtiIzmeneRezervacije(rezervacija)){
            JOptionPane.showMessageDialog(rootPane, "Rezervacija je sacuvana");
            glavna.popuniTabelu();
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Nisu sacuvane izmene za let");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Dogodila se greska kod cuvanja rezervacije");
        }
    }//GEN-LAST:event_jbtnSacuvajIzmeneActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboLetovi;
    private javax.swing.JComboBox jComboPutnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodaj;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnPretraziLet;
    private javax.swing.JButton jbtnPretraziPutnika;
    private javax.swing.JButton jbtnSacuvajIzmene;
    private javax.swing.JButton jbtnSacuvajSve;
    private javax.swing.JTable jtblRezervacije;
    private javax.swing.JTextField jtxtBrojPasosa;
    private javax.swing.JTextField jtxtPutnik;
    // End of variables declaration//GEN-END:variables

    private void popuniCombo() {
        try {
            letovi=Controller.vratiSveLetove();
            putnici=Controller.vratiSvePutnike();
            
            jComboLetovi.removeAllItems();
            jComboPutnik.removeAllItems();
            
            for (LetEntity let : letovi) {
            jComboLetovi.addItem(let);
            }
            for (PutnikEntity putnik : putnici) {
            jComboPutnik.addItem(putnik);
            }
        } catch (Exception ex) {
            Logger.getLogger(FNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void postaviSelektovaniLet(Long sifra) {
        try {
            for (LetEntity let : letovi) {
            if(let.getSifraLeta().equals(sifra))
                jComboLetovi.setSelectedItem(let);
            }
            
            
        } catch (Exception ex) {
            Logger.getLogger(FNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void postaviSelektovanogPutnika(Long sifra) {
        try {
            putnici=Controller.vratiSvePutnike();
            jComboPutnik.removeAllItems();
            
            for (PutnikEntity putnik : putnici) {
            jComboPutnik.addItem(putnik);
            if(putnik.getSifraPutnika().equals(sifra))
                jComboPutnik.setSelectedItem(putnik);
            }
        } catch (Exception ex) {
            Logger.getLogger(FNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void srediTabelu() {
        TableModel tm=new RezervacijaTableModel(new ArrayList<>());
        jtblRezervacije.setModel(tm);
    }

    private void postaviRezervaciju() {
        rezervacija=new RezervacijaLetaEntity();
        rezervacija.setLet((LetEntity) jComboLetovi.getSelectedItem());
        rezervacija.setPutnik((PutnikEntity) jComboPutnik.getSelectedItem());
        rezervacija.setUser(k.getUsername());
    }

    private void popuniPolja() {
        try {
            rezervacija=Controller.vratiRezervaciju(rezervacija.getSifraRezervacije());
            postaviSelektovaniLet(rezervacija.getLet().getSifraLeta());
            postaviSelektovanogPutnika(rezervacija.getPutnik().getSifraPutnika());
            RezervacijaTableModel tm=(RezervacijaTableModel) jtblRezervacije.getModel();
            tm.osveziTabelu(rezervacija.getStavke());
        } catch (Exception ex) {
            Logger.getLogger(FNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


}
